{"version":3,"sources":["Components/Metrics1.js","Components/Metrics2.js","Components/Metrics3.js","App.js","serviceWorker.js","index.js"],"names":["Metrics1","local","hard","Auth","InflC","InflI","InflA","setLocal","setHard","setAth","setInflC","setInflI","setInflA","setBaseScore","baseScore","inf","impact","f","Container","Number","toFixed","FormControl","FormLabel","component","RadioGroup","value","onChange","event","parseInt","target","FormControlLabel","control","Radio","label","Metrics2","use","setUse","fix","setFix","proof","setProof","TemporalScore","Metrics3","per","setPer","plot","setPlot","conf","setConf","celo","setCelo","acces","setAcces","cdp","td","cr","ir","ar","rl","rc","c","i","a","exploi","e","AdjustedTemporal","Math","min","EnvironmentalScore","App","useState","className","Grid","container","spacing","direction","justify","alignItems","item","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d87ad9e8.chunk.js","sourcesContent":["import React from 'react'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Container from '@material-ui/core/Container';\r\nconst Metrics1 = ({local, hard, Auth, InflC, InflI, InflA,\r\n  setLocal, setHard, setAth, setInflC, setInflI, setInflA, setBaseScore, baseScore}) => {\r\n    let av = [0.395, 0.646, 1][local]\r\n    let ac = [0.35, 0.61, 0.71][hard]\r\n    let au = [0.45, 0.56, 0.704][Auth]\r\n    let inf = [0, 0.275, 0.66]\r\n    let c = inf[InflC]\r\n    let i = inf[InflI]\r\n    let a = inf[InflA]\r\n    let impact = 10.41*(1-(1-c)*(1-i)*(1-a))\r\n    let exploi = 20*av*ac*au\r\n    \r\n    let f = 0\r\n    if (impact !== 0){\r\n        f = 1.176\r\n    }\r\n    setBaseScore((((0.6*impact)+(0.4*exploi)-1.5)*f))\r\n    return(\r\n        <div>\r\n        <Container>\r\n        Базовые метрики: {Number(baseScore.toFixed(1))}\r\n        </Container>\r\n        <FormControl>\r\n        <FormLabel component=\"legend\">Способ получения доступа (AV):</FormLabel>\r\n        <RadioGroup value={local} onChange={(event) => setLocal(parseInt(event.target.value))}>\r\n          <FormControlLabel value={0} control={<Radio />} label=\"Локальный\" />\r\n          <FormControlLabel value={1} control={<Radio />} label=\"Смежная сеть\" />\r\n          <FormControlLabel value={2} control={<Radio />} label=\"Сетевой\" />\r\n        </RadioGroup>\r\n        <FormLabel component=\"legend\">Сложность получения доступа (AC):</FormLabel>\r\n      <RadioGroup value={hard} onChange={(event) => setHard(parseInt(event.target.value))}>\r\n        <FormControlLabel value={0} control={<Radio />} label=\"Высокая\" />\r\n        <FormControlLabel value={1} control={<Radio />} label=\"Средняя\" />\r\n        <FormControlLabel value={2} control={<Radio />} label=\"Низкая\" />\r\n      </RadioGroup>\r\n      <FormLabel component=\"legend\">Аутентификация (Au):</FormLabel>\r\n      <RadioGroup value={Auth} onChange={(event) => setAth(parseInt(event.target.value))}>\r\n        <FormControlLabel value={0} control={<Radio />} label=\"Множественная\" />\r\n        <FormControlLabel value={1} control={<Radio />} label=\"Единственная\" />\r\n        <FormControlLabel value={2} control={<Radio />} label=\"Не требуется\" />\r\n      </RadioGroup>\r\n      <FormLabel component=\"legend\">Влияние на конфиденциальность (С):</FormLabel>\r\n      <RadioGroup value={InflC} onChange={(event) => setInflC(parseInt(event.target.value))}>\r\n      <FormControlLabel value={0} control={<Radio />} label=\"Не оказывается\" />\r\n        <FormControlLabel value={1} control={<Radio />} label=\"Частичная\" />\r\n        <FormControlLabel value={2} control={<Radio />} label=\"Полное\" />\r\n      </RadioGroup>\r\n      <FormLabel component=\"legend\">Влияние на целостность (I):</FormLabel>\r\n      <RadioGroup value={InflI} onChange={(event) => setInflI(parseInt(event.target.value))}>\r\n        <FormControlLabel value={0} control={<Radio />} label=\"Не оказывается\" />\r\n        <FormControlLabel value={1} control={<Radio />} label=\"Частичная\" />\r\n        <FormControlLabel value={2} control={<Radio />} label=\"Полное\" />\r\n      </RadioGroup>\r\n      <FormLabel component=\"legend\">Влияние на доступность (A):</FormLabel>\r\n      <RadioGroup value={InflA} onChange={(event) => setInflA(parseInt(event.target.value))}>\r\n        <FormControlLabel value={0} control={<Radio />} label=\"Не оказывается\" />\r\n        <FormControlLabel value={1} control={<Radio />} label=\"Частичная\" />\r\n        <FormControlLabel value={2} control={<Radio />} label=\"Полное\" />\r\n      </RadioGroup>\r\n      </FormControl>\r\n      </div>\r\n    )\r\n}\r\nexport default Metrics1","import React from 'react'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Container from '@material-ui/core/Container';\r\nconst Metrics2 = ({baseScore, use, setUse, fix, setFix, proof, setProof}) => {\r\n    let e = [1, 0.85, 0.9, 0.95, 1][use]\r\n    let rl = [1, 0.87, 0.9, 0.95, 1][fix]\r\n    let rc = [1, 0.9, 0.95, 1][proof]\r\n    let TemporalScore = baseScore*e*rl*rc\r\n    return(\r\n        <div>\r\n        <Container>\r\n        Временные метрики: {Number(TemporalScore.toFixed(1))}\r\n        </Container>\r\n        <FormControl>\r\n      <FormLabel component=\"legend\">Возможность использования :</FormLabel>\r\n      <RadioGroup value={use} onChange={(event) => setUse(parseInt(event.target.value))}>\r\n      <FormControlLabel value={0} control={<Radio />} label=\"Не определено\" />\r\n        <FormControlLabel value={1} control={<Radio />} label=\"Теоретически\" />\r\n        <FormControlLabel value={2} control={<Radio />} label=\"Есть концепция\" />\r\n        <FormControlLabel value={3} control={<Radio />} label=\"Есть сценарий\" />\r\n        <FormControlLabel value={4} control={<Radio />} label=\"Недоступно\" />\r\n      </RadioGroup>\r\n      <FormLabel component=\"legend\">Уровень исправления  :</FormLabel>\r\n      <RadioGroup value={fix} onChange={(event) => setFix(parseInt(event.target.value))}>\r\n        <FormControlLabel value={0} control={<Radio />} label=\"Не определено\" />\r\n        <FormControlLabel value={1} control={<Radio />} label=\"Официальное\" />\r\n        <FormControlLabel value={2} control={<Radio />} label=\"Временное\" />\r\n        <FormControlLabel value={3} control={<Radio />} label=\"Рекомендации\" />\r\n        <FormControlLabel value={4} control={<Radio />} label=\"Недоступно\" />\r\n      </RadioGroup>\r\n      <FormLabel component=\"legend\">Степень достоверности источника :</FormLabel>\r\n      <RadioGroup value={proof} onChange={(event) => setProof(parseInt(event.target.value))}>\r\n        <FormControlLabel value={0} control={<Radio />} label=\"Не определено\" />\r\n        <FormControlLabel value={1} control={<Radio />} label=\"Не подтверждена\" />\r\n        <FormControlLabel value={2} control={<Radio />} label=\"Не доказана\" />\r\n        <FormControlLabel value={3} control={<Radio />} label=\"Подтверждена\" />\r\n      </RadioGroup>\r\n      </FormControl>\r\n      </div>\r\n    )\r\n}\r\nexport default Metrics2","import React from 'react'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Container from '@material-ui/core/Container';\r\nconst Metrics3 = ({baseScore,local, hard, Auth,InflC,InflI,InflA,  per, setPer, plot, setPlot, conf, setConf, celo, setCelo, acces, setAcces, fix, proof, use}) => {\r\n        let cdp = [0, 0, 0.1, 0.3, 0.4, 0.5][per]\r\n        let td  = [1, 0, 0.25, 0.75, 1][plot]\r\n        let cr  = [1, 0.5, 1, 1.51][conf]\r\n        let ir  = [1, 0.5, 1, 1.51][celo]\r\n        let ar  = [1, 0.5, 1, 1.51][acces]\r\n        let rl = [1, 0.87, 0.9, 0.95, 1][fix]\r\n        let rc = [1, 0.9, 0.95, 1][proof]\r\n        let inf = [0, 0.275, 0.66]\r\n        let c = inf[InflC]\r\n        let i = inf[InflI]\r\n        let a = inf[InflA]\r\n        let impact = 10.41*(1-(1-c)*(1-i)*(1-a))\r\n        let f = 0\r\n        if (impact !== 0){\r\n            f = 1.176\r\n        }\r\n\r\n        let av = [0.395, 0.646, 1][local]\r\n        let ac = [0.35, 0.61, 0.71][hard]\r\n        let au = [0.45, 0.56, 0.704][Auth]\r\n        let exploi = 20*av*ac*au\r\n        let e = [1, 0.85, 0.9, 0.95, 1][use]\r\n        let AdjustedImpact = Math.min(10, 10.41*(1-(1-c*cr)*(1-i*ir)*(1-a*ar)))\r\n        let AdjustedBaseScore = (((0.6*AdjustedImpact)+(0.4*exploi)-1.5)*f)\r\n        let AdjustedTemporal = AdjustedBaseScore*e*rl*rc\r\n        let EnvironmentalScore = ((AdjustedTemporal+(10-AdjustedTemporal)*cdp)*td)\r\n    return(\r\n        <div>\r\n        <Container>\r\n        Контекстные метрики: {Number(EnvironmentalScore.toFixed(1))}\r\n        </Container>\r\n        <FormControl>\r\n      <FormLabel component=\"legend\">Вероятность нанесения косвенного ущерба :</FormLabel>\r\n      <RadioGroup value={per} onChange={(event) => setPer(parseInt(event.target.value))}>\r\n      <FormControlLabel value={0} control={<Radio />} label=\"Не определено\" />\r\n        <FormControlLabel value={1} control={<Radio />} label=\"Отсутствует\" />\r\n        <FormControlLabel value={2} control={<Radio />} label=\"Низкая\" />\r\n        <FormControlLabel value={3} control={<Radio />} label=\"Средняя\" />\r\n        <FormControlLabel value={4} control={<Radio />} label=\"Повышенная\" />\r\n        <FormControlLabel value={5} control={<Radio />} label=\"Высокая\" />\r\n      </RadioGroup>\r\n      <FormLabel component=\"legend\">Плотность целей :</FormLabel>\r\n      <RadioGroup value={plot} onChange={(event) => setPlot(parseInt(event.target.value))}>\r\n        <FormControlLabel value={0} control={<Radio />} label=\"Не определено\" />\r\n        <FormControlLabel value={1} control={<Radio />} label=\"Отсутствует\" />\r\n        <FormControlLabel value={2} control={<Radio />} label=\"Низкая\" />\r\n        <FormControlLabel value={3} control={<Radio />} label=\"Средняя\" />\r\n        <FormControlLabel value={4} control={<Radio />} label=\"Высокая\" />\r\n      </RadioGroup>\r\n      <FormLabel component=\"legend\">Требования к конфиденциальности :</FormLabel>\r\n      <RadioGroup value={conf} onChange={(event) => setConf(parseInt(event.target.value))}>\r\n        <FormControlLabel value={0} control={<Radio />} label=\"Не определено\" />\r\n        <FormControlLabel value={1} control={<Radio />} label=\"Низкая\" />\r\n        <FormControlLabel value={2} control={<Radio />} label=\"Средняя\" />\r\n        <FormControlLabel value={3} control={<Radio />} label=\"Высокая\" />\r\n      </RadioGroup>\r\n      <FormLabel component=\"legend\">Требования к целостности :</FormLabel>\r\n      <RadioGroup value={celo} onChange={(event) => setCelo(parseInt(event.target.value))}>\r\n        <FormControlLabel value={0} control={<Radio />} label=\"Не определено\" />\r\n        <FormControlLabel value={1} control={<Radio />} label=\"Низкая\" />\r\n        <FormControlLabel value={2} control={<Radio />} label=\"Средняя\" />\r\n        <FormControlLabel value={3} control={<Radio />} label=\"Высокая\" />\r\n      </RadioGroup>\r\n      <FormLabel component=\"legend\">Требования к доступности :</FormLabel>\r\n      <RadioGroup value={acces} onChange={(event) => setAcces(parseInt(event.target.value))}>\r\n        <FormControlLabel value={0} control={<Radio />} label=\"Не определено\" />\r\n        <FormControlLabel value={1} control={<Radio />} label=\"Низкая\" />\r\n        <FormControlLabel value={2} control={<Radio />} label=\"Средняя\" />\r\n        <FormControlLabel value={3} control={<Radio />} label=\"Высокая\" />\r\n      </RadioGroup>\r\n      </FormControl>\r\n      </div>\r\n    )\r\n}\r\nexport default Metrics3","import React, {useState} from 'react';\nimport Metrics1 from \"./Components/Metrics1\"\nimport Metrics2 from \"./Components/Metrics2\"\nimport Metrics3 from \"./Components/Metrics3\"\nimport './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\nfunction App() {\n  const [local, setLocal] = useState(0)\n  const [hard, setHard] = useState(0)\n  const [Auth, setAth] = useState(0)\n  const [InflC, setInflC] = useState(0)\n  const [InflI, setInflI] = useState(0)\n  const [InflA, setInflA] = useState(0)\n  const [baseScore, setBaseScore] = useState(0)\n  const [use, setUse] = useState(0)\n  const [fix, setFix] = useState(0)\n  const [proof, setProof] = useState(0)\n  const[per, setPer] = useState(0)\n  const[plot, setPlot] = useState(0)\n  const[conf, setConf] = useState(0)\n  const[celo, setCelo] = useState(0)\n  const[acces, setAcces] = useState(0)\n  return (\n    <div className=\"App\">\n      <Grid container spacing={2} \n      direction=\"row\"\n      justify=\"space-around\"\n      alignItems=\"flex-start\">\n        <Grid item className=\"item\">\n          <Metrics1 local={local} hard={hard} Auth={Auth} InflC={InflC} InflI={InflI} InflA={InflA}\n                    setLocal={setLocal} setHard={setHard} setAth={setAth} setInflC={setInflC} setInflI={setInflI} setInflA={setInflA} baseScore={baseScore} setBaseScore={setBaseScore}\n            />\n        </Grid>\n        <Grid item className=\"item\">\n          <Metrics2 baseScore={baseScore} use={use} setUse={setUse} fix={fix} setFix={setFix} proof={proof} setProof={setProof}/>\n        </Grid>\n        <Grid item className=\"item\">\n          <Metrics3 per={per} setPer={setPer} plot={plot} setPlot={setPlot} conf={conf} setConf={setConf} fix={fix} proof={proof} celo={celo} setCelo={setCelo} acces={acces}\n          setAcces={setAcces} InflC={InflC} InflI={InflI} InflA={InflA} use={use} local={local} hard={hard} Auth={Auth}/>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}